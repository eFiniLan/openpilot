From 11ab04387a8a9a872a95b87c91acaedd5dd4faf2 Mon Sep 17 00:00:00 2001
From: Jacob Pfeifer <jacob@pfeifer.dev>
Date: Tue, 17 Oct 2023 21:55:24 -0400
Subject: [PATCH] mapd

---
 common/params.cc                    |  4 +++
 selfdrive/manager/process_config.py |  4 +++
 selfdrive/mapd.py                   | 52 +++++++++++++++++++++++++++++
 selfdrive/navd/navd.py              |  7 ++++
 4 files changed, 67 insertions(+)
 create mode 100644 selfdrive/mapd.py

diff --git a/common/params.cc b/common/params.cc
index 3f6cb7044..5a392025f 100644
--- a/common/params.cc
+++ b/common/params.cc
@@ -207,6 +207,10 @@ std::unordered_map<std::string, uint32_t> keys = {
     {"Version", PERSISTENT},
     {"VisionRadarToggle", PERSISTENT},
     {"WheeledBody", PERSISTENT},
+
+    // PFEIFER - MAPD {{
+    {"RoadName", PERSISTENT},
+    // }} PFEIFER - MAPD
 };
 
 } // namespace
diff --git a/selfdrive/manager/process_config.py b/selfdrive/manager/process_config.py
index aee4748a2..39c4bf67b 100644
--- a/selfdrive/manager/process_config.py
+++ b/selfdrive/manager/process_config.py
@@ -84,6 +84,10 @@ procs = [
   PythonProcess("uploader", "system.loggerd.uploader", always_run),
   PythonProcess("statsd", "selfdrive.statsd", always_run),
 
+  # PFEIFER - MAPD {{
+  PythonProcess("mapd", "selfdrive.mapd", always_run),
+  # }} PFEIFER - MAPD
+
   # debug procs
   NativeProcess("bridge", "cereal/messaging", ["./bridge"], notcar),
   PythonProcess("webjoystick", "tools.bodyteleop.web", notcar),
diff --git a/selfdrive/mapd.py b/selfdrive/mapd.py
new file mode 100644
index 000000000..bc9495f13
--- /dev/null
+++ b/selfdrive/mapd.py
@@ -0,0 +1,52 @@
+# PFEIFER - MAPD
+import os
+import subprocess
+import urllib.request
+from openpilot.common.realtime import Ratekeeper
+import stat
+
+VERSION = 'v1.1.0'
+URL = f"https://github.com/pfeiferj/openpilot-mapd/releases/download/{VERSION}/mapd"
+MAPD_PATH = '/data/openpilot/mapd'
+VERSION_PATH = '/data/openpilot/mapd_version'
+
+def download():
+  with urllib.request.urlopen(URL) as f:
+    with open(MAPD_PATH, 'wb') as output:
+      output.write(f.read())
+      os.fsync(output)
+      os.chmod(MAPD_PATH, stat.S_IEXEC)
+    with open(VERSION_PATH, 'w') as output:
+      output.write(VERSION)
+      os.fsync(output)
+
+def mapd_thread(sm=None, pm=None):
+  rk = Ratekeeper(0.05, print_delay_threshold=None)
+
+  while True:
+    try:
+      if not os.path.exists(MAPD_PATH):
+        download()
+        continue
+      if not os.path.exists(VERSION_PATH):
+        download()
+        continue
+      with open(VERSION_PATH) as f:
+        content = f.read()
+        if content != VERSION:
+          download()
+          continue
+
+      process = subprocess.Popen('/data/openpilot/mapd', stdout=subprocess.PIPE)
+      process.wait()
+    except Exception as e:
+      print(e)
+
+    rk.keep_time()
+
+
+def main(sm=None, pm=None):
+  mapd_thread(sm, pm)
+
+if __name__ == "__main__":
+  main()
diff --git a/selfdrive/navd/navd.py b/selfdrive/navd/navd.py
index da2b8c06b..c7ac0f93a 100755
--- a/selfdrive/navd/navd.py
+++ b/selfdrive/navd/navd.py
@@ -17,6 +17,10 @@ from openpilot.selfdrive.navd.helpers import (Coordinate, coordinate_from_param,
                                     parse_banner_instructions)
 from openpilot.system.swaglog import cloudlog
 
+# PFEIFER - MAPD {{
+mem_params = Params("/dev/shm/params")
+# }} PFEIFER - MAPD
+
 REROUTE_DISTANCE = 25
 MANEUVER_TRANSITION_THRESHOLD = 10
 REROUTE_COUNTER_MIN = 3
@@ -83,6 +87,9 @@ class RouteEngine:
     if self.localizer_valid:
       self.last_bearing = math.degrees(location.calibratedOrientationNED.value[2])
       self.last_position = Coordinate(location.positionGeodetic.value[0], location.positionGeodetic.value[1])
+      # PFEIFER - MAPD {{
+      mem_params.put("LastGPSPosition", json.dumps({ "latitude": self.last_position.latitude, "longitude": self.last_position.longitude }))
+      # }} PFEIFER - MAPD
 
   def recompute_route(self):
     if self.last_position is None:
-- 
2.39.2

