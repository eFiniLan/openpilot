#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_688119966555173306) {
   out_688119966555173306[0] = 0;
   out_688119966555173306[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_688119966555173306[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_688119966555173306[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_688119966555173306[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_688119966555173306[5] = -sin(in_vec[1]);
   out_688119966555173306[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_688119966555173306[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_688119966555173306[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_688119966555173306[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_688119966555173306[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_688119966555173306[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_688119966555173306[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_688119966555173306[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_688119966555173306[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_688119966555173306[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_688119966555173306[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_688119966555173306[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5924447345377752939) {
   out_5924447345377752939[0] = delta_x[0] + nom_x[0];
   out_5924447345377752939[1] = delta_x[1] + nom_x[1];
   out_5924447345377752939[2] = delta_x[2] + nom_x[2];
   out_5924447345377752939[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5924447345377752939[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5924447345377752939[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5924447345377752939[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5924447345377752939[7] = delta_x[6] + nom_x[7];
   out_5924447345377752939[8] = delta_x[7] + nom_x[8];
   out_5924447345377752939[9] = delta_x[8] + nom_x[9];
   out_5924447345377752939[10] = delta_x[9] + nom_x[10];
   out_5924447345377752939[11] = delta_x[10] + nom_x[11];
   out_5924447345377752939[12] = delta_x[11] + nom_x[12];
   out_5924447345377752939[13] = delta_x[12] + nom_x[13];
   out_5924447345377752939[14] = delta_x[13] + nom_x[14];
   out_5924447345377752939[15] = delta_x[14] + nom_x[15];
   out_5924447345377752939[16] = delta_x[15] + nom_x[16];
   out_5924447345377752939[17] = delta_x[16] + nom_x[17];
   out_5924447345377752939[18] = delta_x[17] + nom_x[18];
   out_5924447345377752939[19] = delta_x[18] + nom_x[19];
   out_5924447345377752939[20] = delta_x[19] + nom_x[20];
   out_5924447345377752939[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4459438890970929893) {
   out_4459438890970929893[0] = -nom_x[0] + true_x[0];
   out_4459438890970929893[1] = -nom_x[1] + true_x[1];
   out_4459438890970929893[2] = -nom_x[2] + true_x[2];
   out_4459438890970929893[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4459438890970929893[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4459438890970929893[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4459438890970929893[6] = -nom_x[7] + true_x[7];
   out_4459438890970929893[7] = -nom_x[8] + true_x[8];
   out_4459438890970929893[8] = -nom_x[9] + true_x[9];
   out_4459438890970929893[9] = -nom_x[10] + true_x[10];
   out_4459438890970929893[10] = -nom_x[11] + true_x[11];
   out_4459438890970929893[11] = -nom_x[12] + true_x[12];
   out_4459438890970929893[12] = -nom_x[13] + true_x[13];
   out_4459438890970929893[13] = -nom_x[14] + true_x[14];
   out_4459438890970929893[14] = -nom_x[15] + true_x[15];
   out_4459438890970929893[15] = -nom_x[16] + true_x[16];
   out_4459438890970929893[16] = -nom_x[17] + true_x[17];
   out_4459438890970929893[17] = -nom_x[18] + true_x[18];
   out_4459438890970929893[18] = -nom_x[19] + true_x[19];
   out_4459438890970929893[19] = -nom_x[20] + true_x[20];
   out_4459438890970929893[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1714341149114002571) {
   out_1714341149114002571[0] = 1.0;
   out_1714341149114002571[1] = 0;
   out_1714341149114002571[2] = 0;
   out_1714341149114002571[3] = 0;
   out_1714341149114002571[4] = 0;
   out_1714341149114002571[5] = 0;
   out_1714341149114002571[6] = 0;
   out_1714341149114002571[7] = 0;
   out_1714341149114002571[8] = 0;
   out_1714341149114002571[9] = 0;
   out_1714341149114002571[10] = 0;
   out_1714341149114002571[11] = 0;
   out_1714341149114002571[12] = 0;
   out_1714341149114002571[13] = 0;
   out_1714341149114002571[14] = 0;
   out_1714341149114002571[15] = 0;
   out_1714341149114002571[16] = 0;
   out_1714341149114002571[17] = 0;
   out_1714341149114002571[18] = 0;
   out_1714341149114002571[19] = 0;
   out_1714341149114002571[20] = 0;
   out_1714341149114002571[21] = 0;
   out_1714341149114002571[22] = 1.0;
   out_1714341149114002571[23] = 0;
   out_1714341149114002571[24] = 0;
   out_1714341149114002571[25] = 0;
   out_1714341149114002571[26] = 0;
   out_1714341149114002571[27] = 0;
   out_1714341149114002571[28] = 0;
   out_1714341149114002571[29] = 0;
   out_1714341149114002571[30] = 0;
   out_1714341149114002571[31] = 0;
   out_1714341149114002571[32] = 0;
   out_1714341149114002571[33] = 0;
   out_1714341149114002571[34] = 0;
   out_1714341149114002571[35] = 0;
   out_1714341149114002571[36] = 0;
   out_1714341149114002571[37] = 0;
   out_1714341149114002571[38] = 0;
   out_1714341149114002571[39] = 0;
   out_1714341149114002571[40] = 0;
   out_1714341149114002571[41] = 0;
   out_1714341149114002571[42] = 0;
   out_1714341149114002571[43] = 0;
   out_1714341149114002571[44] = 1.0;
   out_1714341149114002571[45] = 0;
   out_1714341149114002571[46] = 0;
   out_1714341149114002571[47] = 0;
   out_1714341149114002571[48] = 0;
   out_1714341149114002571[49] = 0;
   out_1714341149114002571[50] = 0;
   out_1714341149114002571[51] = 0;
   out_1714341149114002571[52] = 0;
   out_1714341149114002571[53] = 0;
   out_1714341149114002571[54] = 0;
   out_1714341149114002571[55] = 0;
   out_1714341149114002571[56] = 0;
   out_1714341149114002571[57] = 0;
   out_1714341149114002571[58] = 0;
   out_1714341149114002571[59] = 0;
   out_1714341149114002571[60] = 0;
   out_1714341149114002571[61] = 0;
   out_1714341149114002571[62] = 0;
   out_1714341149114002571[63] = 0;
   out_1714341149114002571[64] = 0;
   out_1714341149114002571[65] = 0;
   out_1714341149114002571[66] = -0.5*state[4];
   out_1714341149114002571[67] = -0.5*state[5];
   out_1714341149114002571[68] = -0.5*state[6];
   out_1714341149114002571[69] = 0;
   out_1714341149114002571[70] = 0;
   out_1714341149114002571[71] = 0;
   out_1714341149114002571[72] = 0;
   out_1714341149114002571[73] = 0;
   out_1714341149114002571[74] = 0;
   out_1714341149114002571[75] = 0;
   out_1714341149114002571[76] = 0;
   out_1714341149114002571[77] = 0;
   out_1714341149114002571[78] = 0;
   out_1714341149114002571[79] = 0;
   out_1714341149114002571[80] = 0;
   out_1714341149114002571[81] = 0;
   out_1714341149114002571[82] = 0;
   out_1714341149114002571[83] = 0;
   out_1714341149114002571[84] = 0;
   out_1714341149114002571[85] = 0;
   out_1714341149114002571[86] = 0;
   out_1714341149114002571[87] = 0.5*state[3];
   out_1714341149114002571[88] = 0.5*state[6];
   out_1714341149114002571[89] = -0.5*state[5];
   out_1714341149114002571[90] = 0;
   out_1714341149114002571[91] = 0;
   out_1714341149114002571[92] = 0;
   out_1714341149114002571[93] = 0;
   out_1714341149114002571[94] = 0;
   out_1714341149114002571[95] = 0;
   out_1714341149114002571[96] = 0;
   out_1714341149114002571[97] = 0;
   out_1714341149114002571[98] = 0;
   out_1714341149114002571[99] = 0;
   out_1714341149114002571[100] = 0;
   out_1714341149114002571[101] = 0;
   out_1714341149114002571[102] = 0;
   out_1714341149114002571[103] = 0;
   out_1714341149114002571[104] = 0;
   out_1714341149114002571[105] = 0;
   out_1714341149114002571[106] = 0;
   out_1714341149114002571[107] = 0;
   out_1714341149114002571[108] = -0.5*state[6];
   out_1714341149114002571[109] = 0.5*state[3];
   out_1714341149114002571[110] = 0.5*state[4];
   out_1714341149114002571[111] = 0;
   out_1714341149114002571[112] = 0;
   out_1714341149114002571[113] = 0;
   out_1714341149114002571[114] = 0;
   out_1714341149114002571[115] = 0;
   out_1714341149114002571[116] = 0;
   out_1714341149114002571[117] = 0;
   out_1714341149114002571[118] = 0;
   out_1714341149114002571[119] = 0;
   out_1714341149114002571[120] = 0;
   out_1714341149114002571[121] = 0;
   out_1714341149114002571[122] = 0;
   out_1714341149114002571[123] = 0;
   out_1714341149114002571[124] = 0;
   out_1714341149114002571[125] = 0;
   out_1714341149114002571[126] = 0;
   out_1714341149114002571[127] = 0;
   out_1714341149114002571[128] = 0;
   out_1714341149114002571[129] = 0.5*state[5];
   out_1714341149114002571[130] = -0.5*state[4];
   out_1714341149114002571[131] = 0.5*state[3];
   out_1714341149114002571[132] = 0;
   out_1714341149114002571[133] = 0;
   out_1714341149114002571[134] = 0;
   out_1714341149114002571[135] = 0;
   out_1714341149114002571[136] = 0;
   out_1714341149114002571[137] = 0;
   out_1714341149114002571[138] = 0;
   out_1714341149114002571[139] = 0;
   out_1714341149114002571[140] = 0;
   out_1714341149114002571[141] = 0;
   out_1714341149114002571[142] = 0;
   out_1714341149114002571[143] = 0;
   out_1714341149114002571[144] = 0;
   out_1714341149114002571[145] = 0;
   out_1714341149114002571[146] = 0;
   out_1714341149114002571[147] = 0;
   out_1714341149114002571[148] = 0;
   out_1714341149114002571[149] = 0;
   out_1714341149114002571[150] = 0;
   out_1714341149114002571[151] = 0;
   out_1714341149114002571[152] = 0;
   out_1714341149114002571[153] = 1.0;
   out_1714341149114002571[154] = 0;
   out_1714341149114002571[155] = 0;
   out_1714341149114002571[156] = 0;
   out_1714341149114002571[157] = 0;
   out_1714341149114002571[158] = 0;
   out_1714341149114002571[159] = 0;
   out_1714341149114002571[160] = 0;
   out_1714341149114002571[161] = 0;
   out_1714341149114002571[162] = 0;
   out_1714341149114002571[163] = 0;
   out_1714341149114002571[164] = 0;
   out_1714341149114002571[165] = 0;
   out_1714341149114002571[166] = 0;
   out_1714341149114002571[167] = 0;
   out_1714341149114002571[168] = 0;
   out_1714341149114002571[169] = 0;
   out_1714341149114002571[170] = 0;
   out_1714341149114002571[171] = 0;
   out_1714341149114002571[172] = 0;
   out_1714341149114002571[173] = 0;
   out_1714341149114002571[174] = 0;
   out_1714341149114002571[175] = 1.0;
   out_1714341149114002571[176] = 0;
   out_1714341149114002571[177] = 0;
   out_1714341149114002571[178] = 0;
   out_1714341149114002571[179] = 0;
   out_1714341149114002571[180] = 0;
   out_1714341149114002571[181] = 0;
   out_1714341149114002571[182] = 0;
   out_1714341149114002571[183] = 0;
   out_1714341149114002571[184] = 0;
   out_1714341149114002571[185] = 0;
   out_1714341149114002571[186] = 0;
   out_1714341149114002571[187] = 0;
   out_1714341149114002571[188] = 0;
   out_1714341149114002571[189] = 0;
   out_1714341149114002571[190] = 0;
   out_1714341149114002571[191] = 0;
   out_1714341149114002571[192] = 0;
   out_1714341149114002571[193] = 0;
   out_1714341149114002571[194] = 0;
   out_1714341149114002571[195] = 0;
   out_1714341149114002571[196] = 0;
   out_1714341149114002571[197] = 1.0;
   out_1714341149114002571[198] = 0;
   out_1714341149114002571[199] = 0;
   out_1714341149114002571[200] = 0;
   out_1714341149114002571[201] = 0;
   out_1714341149114002571[202] = 0;
   out_1714341149114002571[203] = 0;
   out_1714341149114002571[204] = 0;
   out_1714341149114002571[205] = 0;
   out_1714341149114002571[206] = 0;
   out_1714341149114002571[207] = 0;
   out_1714341149114002571[208] = 0;
   out_1714341149114002571[209] = 0;
   out_1714341149114002571[210] = 0;
   out_1714341149114002571[211] = 0;
   out_1714341149114002571[212] = 0;
   out_1714341149114002571[213] = 0;
   out_1714341149114002571[214] = 0;
   out_1714341149114002571[215] = 0;
   out_1714341149114002571[216] = 0;
   out_1714341149114002571[217] = 0;
   out_1714341149114002571[218] = 0;
   out_1714341149114002571[219] = 1.0;
   out_1714341149114002571[220] = 0;
   out_1714341149114002571[221] = 0;
   out_1714341149114002571[222] = 0;
   out_1714341149114002571[223] = 0;
   out_1714341149114002571[224] = 0;
   out_1714341149114002571[225] = 0;
   out_1714341149114002571[226] = 0;
   out_1714341149114002571[227] = 0;
   out_1714341149114002571[228] = 0;
   out_1714341149114002571[229] = 0;
   out_1714341149114002571[230] = 0;
   out_1714341149114002571[231] = 0;
   out_1714341149114002571[232] = 0;
   out_1714341149114002571[233] = 0;
   out_1714341149114002571[234] = 0;
   out_1714341149114002571[235] = 0;
   out_1714341149114002571[236] = 0;
   out_1714341149114002571[237] = 0;
   out_1714341149114002571[238] = 0;
   out_1714341149114002571[239] = 0;
   out_1714341149114002571[240] = 0;
   out_1714341149114002571[241] = 1.0;
   out_1714341149114002571[242] = 0;
   out_1714341149114002571[243] = 0;
   out_1714341149114002571[244] = 0;
   out_1714341149114002571[245] = 0;
   out_1714341149114002571[246] = 0;
   out_1714341149114002571[247] = 0;
   out_1714341149114002571[248] = 0;
   out_1714341149114002571[249] = 0;
   out_1714341149114002571[250] = 0;
   out_1714341149114002571[251] = 0;
   out_1714341149114002571[252] = 0;
   out_1714341149114002571[253] = 0;
   out_1714341149114002571[254] = 0;
   out_1714341149114002571[255] = 0;
   out_1714341149114002571[256] = 0;
   out_1714341149114002571[257] = 0;
   out_1714341149114002571[258] = 0;
   out_1714341149114002571[259] = 0;
   out_1714341149114002571[260] = 0;
   out_1714341149114002571[261] = 0;
   out_1714341149114002571[262] = 0;
   out_1714341149114002571[263] = 1.0;
   out_1714341149114002571[264] = 0;
   out_1714341149114002571[265] = 0;
   out_1714341149114002571[266] = 0;
   out_1714341149114002571[267] = 0;
   out_1714341149114002571[268] = 0;
   out_1714341149114002571[269] = 0;
   out_1714341149114002571[270] = 0;
   out_1714341149114002571[271] = 0;
   out_1714341149114002571[272] = 0;
   out_1714341149114002571[273] = 0;
   out_1714341149114002571[274] = 0;
   out_1714341149114002571[275] = 0;
   out_1714341149114002571[276] = 0;
   out_1714341149114002571[277] = 0;
   out_1714341149114002571[278] = 0;
   out_1714341149114002571[279] = 0;
   out_1714341149114002571[280] = 0;
   out_1714341149114002571[281] = 0;
   out_1714341149114002571[282] = 0;
   out_1714341149114002571[283] = 0;
   out_1714341149114002571[284] = 0;
   out_1714341149114002571[285] = 1.0;
   out_1714341149114002571[286] = 0;
   out_1714341149114002571[287] = 0;
   out_1714341149114002571[288] = 0;
   out_1714341149114002571[289] = 0;
   out_1714341149114002571[290] = 0;
   out_1714341149114002571[291] = 0;
   out_1714341149114002571[292] = 0;
   out_1714341149114002571[293] = 0;
   out_1714341149114002571[294] = 0;
   out_1714341149114002571[295] = 0;
   out_1714341149114002571[296] = 0;
   out_1714341149114002571[297] = 0;
   out_1714341149114002571[298] = 0;
   out_1714341149114002571[299] = 0;
   out_1714341149114002571[300] = 0;
   out_1714341149114002571[301] = 0;
   out_1714341149114002571[302] = 0;
   out_1714341149114002571[303] = 0;
   out_1714341149114002571[304] = 0;
   out_1714341149114002571[305] = 0;
   out_1714341149114002571[306] = 0;
   out_1714341149114002571[307] = 1.0;
   out_1714341149114002571[308] = 0;
   out_1714341149114002571[309] = 0;
   out_1714341149114002571[310] = 0;
   out_1714341149114002571[311] = 0;
   out_1714341149114002571[312] = 0;
   out_1714341149114002571[313] = 0;
   out_1714341149114002571[314] = 0;
   out_1714341149114002571[315] = 0;
   out_1714341149114002571[316] = 0;
   out_1714341149114002571[317] = 0;
   out_1714341149114002571[318] = 0;
   out_1714341149114002571[319] = 0;
   out_1714341149114002571[320] = 0;
   out_1714341149114002571[321] = 0;
   out_1714341149114002571[322] = 0;
   out_1714341149114002571[323] = 0;
   out_1714341149114002571[324] = 0;
   out_1714341149114002571[325] = 0;
   out_1714341149114002571[326] = 0;
   out_1714341149114002571[327] = 0;
   out_1714341149114002571[328] = 0;
   out_1714341149114002571[329] = 1.0;
   out_1714341149114002571[330] = 0;
   out_1714341149114002571[331] = 0;
   out_1714341149114002571[332] = 0;
   out_1714341149114002571[333] = 0;
   out_1714341149114002571[334] = 0;
   out_1714341149114002571[335] = 0;
   out_1714341149114002571[336] = 0;
   out_1714341149114002571[337] = 0;
   out_1714341149114002571[338] = 0;
   out_1714341149114002571[339] = 0;
   out_1714341149114002571[340] = 0;
   out_1714341149114002571[341] = 0;
   out_1714341149114002571[342] = 0;
   out_1714341149114002571[343] = 0;
   out_1714341149114002571[344] = 0;
   out_1714341149114002571[345] = 0;
   out_1714341149114002571[346] = 0;
   out_1714341149114002571[347] = 0;
   out_1714341149114002571[348] = 0;
   out_1714341149114002571[349] = 0;
   out_1714341149114002571[350] = 0;
   out_1714341149114002571[351] = 1.0;
   out_1714341149114002571[352] = 0;
   out_1714341149114002571[353] = 0;
   out_1714341149114002571[354] = 0;
   out_1714341149114002571[355] = 0;
   out_1714341149114002571[356] = 0;
   out_1714341149114002571[357] = 0;
   out_1714341149114002571[358] = 0;
   out_1714341149114002571[359] = 0;
   out_1714341149114002571[360] = 0;
   out_1714341149114002571[361] = 0;
   out_1714341149114002571[362] = 0;
   out_1714341149114002571[363] = 0;
   out_1714341149114002571[364] = 0;
   out_1714341149114002571[365] = 0;
   out_1714341149114002571[366] = 0;
   out_1714341149114002571[367] = 0;
   out_1714341149114002571[368] = 0;
   out_1714341149114002571[369] = 0;
   out_1714341149114002571[370] = 0;
   out_1714341149114002571[371] = 0;
   out_1714341149114002571[372] = 0;
   out_1714341149114002571[373] = 1.0;
   out_1714341149114002571[374] = 0;
   out_1714341149114002571[375] = 0;
   out_1714341149114002571[376] = 0;
   out_1714341149114002571[377] = 0;
   out_1714341149114002571[378] = 0;
   out_1714341149114002571[379] = 0;
   out_1714341149114002571[380] = 0;
   out_1714341149114002571[381] = 0;
   out_1714341149114002571[382] = 0;
   out_1714341149114002571[383] = 0;
   out_1714341149114002571[384] = 0;
   out_1714341149114002571[385] = 0;
   out_1714341149114002571[386] = 0;
   out_1714341149114002571[387] = 0;
   out_1714341149114002571[388] = 0;
   out_1714341149114002571[389] = 0;
   out_1714341149114002571[390] = 0;
   out_1714341149114002571[391] = 0;
   out_1714341149114002571[392] = 0;
   out_1714341149114002571[393] = 0;
   out_1714341149114002571[394] = 0;
   out_1714341149114002571[395] = 1.0;
   out_1714341149114002571[396] = 0;
   out_1714341149114002571[397] = 0;
   out_1714341149114002571[398] = 0;
   out_1714341149114002571[399] = 0;
   out_1714341149114002571[400] = 0;
   out_1714341149114002571[401] = 0;
   out_1714341149114002571[402] = 0;
   out_1714341149114002571[403] = 0;
   out_1714341149114002571[404] = 0;
   out_1714341149114002571[405] = 0;
   out_1714341149114002571[406] = 0;
   out_1714341149114002571[407] = 0;
   out_1714341149114002571[408] = 0;
   out_1714341149114002571[409] = 0;
   out_1714341149114002571[410] = 0;
   out_1714341149114002571[411] = 0;
   out_1714341149114002571[412] = 0;
   out_1714341149114002571[413] = 0;
   out_1714341149114002571[414] = 0;
   out_1714341149114002571[415] = 0;
   out_1714341149114002571[416] = 0;
   out_1714341149114002571[417] = 1.0;
   out_1714341149114002571[418] = 0;
   out_1714341149114002571[419] = 0;
   out_1714341149114002571[420] = 0;
   out_1714341149114002571[421] = 0;
   out_1714341149114002571[422] = 0;
   out_1714341149114002571[423] = 0;
   out_1714341149114002571[424] = 0;
   out_1714341149114002571[425] = 0;
   out_1714341149114002571[426] = 0;
   out_1714341149114002571[427] = 0;
   out_1714341149114002571[428] = 0;
   out_1714341149114002571[429] = 0;
   out_1714341149114002571[430] = 0;
   out_1714341149114002571[431] = 0;
   out_1714341149114002571[432] = 0;
   out_1714341149114002571[433] = 0;
   out_1714341149114002571[434] = 0;
   out_1714341149114002571[435] = 0;
   out_1714341149114002571[436] = 0;
   out_1714341149114002571[437] = 0;
   out_1714341149114002571[438] = 0;
   out_1714341149114002571[439] = 1.0;
   out_1714341149114002571[440] = 0;
   out_1714341149114002571[441] = 0;
   out_1714341149114002571[442] = 0;
   out_1714341149114002571[443] = 0;
   out_1714341149114002571[444] = 0;
   out_1714341149114002571[445] = 0;
   out_1714341149114002571[446] = 0;
   out_1714341149114002571[447] = 0;
   out_1714341149114002571[448] = 0;
   out_1714341149114002571[449] = 0;
   out_1714341149114002571[450] = 0;
   out_1714341149114002571[451] = 0;
   out_1714341149114002571[452] = 0;
   out_1714341149114002571[453] = 0;
   out_1714341149114002571[454] = 0;
   out_1714341149114002571[455] = 0;
   out_1714341149114002571[456] = 0;
   out_1714341149114002571[457] = 0;
   out_1714341149114002571[458] = 0;
   out_1714341149114002571[459] = 0;
   out_1714341149114002571[460] = 0;
   out_1714341149114002571[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3846009461295015815) {
   out_3846009461295015815[0] = dt*state[7] + state[0];
   out_3846009461295015815[1] = dt*state[8] + state[1];
   out_3846009461295015815[2] = dt*state[9] + state[2];
   out_3846009461295015815[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3846009461295015815[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3846009461295015815[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3846009461295015815[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3846009461295015815[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3846009461295015815[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3846009461295015815[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3846009461295015815[10] = state[10];
   out_3846009461295015815[11] = state[11];
   out_3846009461295015815[12] = state[12];
   out_3846009461295015815[13] = state[13];
   out_3846009461295015815[14] = state[14];
   out_3846009461295015815[15] = state[15];
   out_3846009461295015815[16] = state[16];
   out_3846009461295015815[17] = state[17];
   out_3846009461295015815[18] = state[18];
   out_3846009461295015815[19] = state[19];
   out_3846009461295015815[20] = state[20];
   out_3846009461295015815[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4941625080249828538) {
   out_4941625080249828538[0] = 1;
   out_4941625080249828538[1] = 0;
   out_4941625080249828538[2] = 0;
   out_4941625080249828538[3] = 0;
   out_4941625080249828538[4] = 0;
   out_4941625080249828538[5] = 0;
   out_4941625080249828538[6] = dt;
   out_4941625080249828538[7] = 0;
   out_4941625080249828538[8] = 0;
   out_4941625080249828538[9] = 0;
   out_4941625080249828538[10] = 0;
   out_4941625080249828538[11] = 0;
   out_4941625080249828538[12] = 0;
   out_4941625080249828538[13] = 0;
   out_4941625080249828538[14] = 0;
   out_4941625080249828538[15] = 0;
   out_4941625080249828538[16] = 0;
   out_4941625080249828538[17] = 0;
   out_4941625080249828538[18] = 0;
   out_4941625080249828538[19] = 0;
   out_4941625080249828538[20] = 0;
   out_4941625080249828538[21] = 0;
   out_4941625080249828538[22] = 1;
   out_4941625080249828538[23] = 0;
   out_4941625080249828538[24] = 0;
   out_4941625080249828538[25] = 0;
   out_4941625080249828538[26] = 0;
   out_4941625080249828538[27] = 0;
   out_4941625080249828538[28] = dt;
   out_4941625080249828538[29] = 0;
   out_4941625080249828538[30] = 0;
   out_4941625080249828538[31] = 0;
   out_4941625080249828538[32] = 0;
   out_4941625080249828538[33] = 0;
   out_4941625080249828538[34] = 0;
   out_4941625080249828538[35] = 0;
   out_4941625080249828538[36] = 0;
   out_4941625080249828538[37] = 0;
   out_4941625080249828538[38] = 0;
   out_4941625080249828538[39] = 0;
   out_4941625080249828538[40] = 0;
   out_4941625080249828538[41] = 0;
   out_4941625080249828538[42] = 0;
   out_4941625080249828538[43] = 0;
   out_4941625080249828538[44] = 1;
   out_4941625080249828538[45] = 0;
   out_4941625080249828538[46] = 0;
   out_4941625080249828538[47] = 0;
   out_4941625080249828538[48] = 0;
   out_4941625080249828538[49] = 0;
   out_4941625080249828538[50] = dt;
   out_4941625080249828538[51] = 0;
   out_4941625080249828538[52] = 0;
   out_4941625080249828538[53] = 0;
   out_4941625080249828538[54] = 0;
   out_4941625080249828538[55] = 0;
   out_4941625080249828538[56] = 0;
   out_4941625080249828538[57] = 0;
   out_4941625080249828538[58] = 0;
   out_4941625080249828538[59] = 0;
   out_4941625080249828538[60] = 0;
   out_4941625080249828538[61] = 0;
   out_4941625080249828538[62] = 0;
   out_4941625080249828538[63] = 0;
   out_4941625080249828538[64] = 0;
   out_4941625080249828538[65] = 0;
   out_4941625080249828538[66] = 1;
   out_4941625080249828538[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4941625080249828538[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4941625080249828538[69] = 0;
   out_4941625080249828538[70] = 0;
   out_4941625080249828538[71] = 0;
   out_4941625080249828538[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4941625080249828538[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4941625080249828538[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4941625080249828538[75] = 0;
   out_4941625080249828538[76] = 0;
   out_4941625080249828538[77] = 0;
   out_4941625080249828538[78] = 0;
   out_4941625080249828538[79] = 0;
   out_4941625080249828538[80] = 0;
   out_4941625080249828538[81] = 0;
   out_4941625080249828538[82] = 0;
   out_4941625080249828538[83] = 0;
   out_4941625080249828538[84] = 0;
   out_4941625080249828538[85] = 0;
   out_4941625080249828538[86] = 0;
   out_4941625080249828538[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4941625080249828538[88] = 1;
   out_4941625080249828538[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4941625080249828538[90] = 0;
   out_4941625080249828538[91] = 0;
   out_4941625080249828538[92] = 0;
   out_4941625080249828538[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4941625080249828538[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4941625080249828538[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4941625080249828538[96] = 0;
   out_4941625080249828538[97] = 0;
   out_4941625080249828538[98] = 0;
   out_4941625080249828538[99] = 0;
   out_4941625080249828538[100] = 0;
   out_4941625080249828538[101] = 0;
   out_4941625080249828538[102] = 0;
   out_4941625080249828538[103] = 0;
   out_4941625080249828538[104] = 0;
   out_4941625080249828538[105] = 0;
   out_4941625080249828538[106] = 0;
   out_4941625080249828538[107] = 0;
   out_4941625080249828538[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4941625080249828538[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4941625080249828538[110] = 1;
   out_4941625080249828538[111] = 0;
   out_4941625080249828538[112] = 0;
   out_4941625080249828538[113] = 0;
   out_4941625080249828538[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4941625080249828538[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4941625080249828538[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4941625080249828538[117] = 0;
   out_4941625080249828538[118] = 0;
   out_4941625080249828538[119] = 0;
   out_4941625080249828538[120] = 0;
   out_4941625080249828538[121] = 0;
   out_4941625080249828538[122] = 0;
   out_4941625080249828538[123] = 0;
   out_4941625080249828538[124] = 0;
   out_4941625080249828538[125] = 0;
   out_4941625080249828538[126] = 0;
   out_4941625080249828538[127] = 0;
   out_4941625080249828538[128] = 0;
   out_4941625080249828538[129] = 0;
   out_4941625080249828538[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4941625080249828538[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4941625080249828538[132] = 1;
   out_4941625080249828538[133] = 0;
   out_4941625080249828538[134] = 0;
   out_4941625080249828538[135] = 0;
   out_4941625080249828538[136] = 0;
   out_4941625080249828538[137] = 0;
   out_4941625080249828538[138] = 0;
   out_4941625080249828538[139] = 0;
   out_4941625080249828538[140] = 0;
   out_4941625080249828538[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4941625080249828538[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4941625080249828538[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4941625080249828538[144] = 0;
   out_4941625080249828538[145] = 0;
   out_4941625080249828538[146] = 0;
   out_4941625080249828538[147] = 0;
   out_4941625080249828538[148] = 0;
   out_4941625080249828538[149] = 0;
   out_4941625080249828538[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4941625080249828538[151] = 0;
   out_4941625080249828538[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4941625080249828538[153] = 0;
   out_4941625080249828538[154] = 1;
   out_4941625080249828538[155] = 0;
   out_4941625080249828538[156] = 0;
   out_4941625080249828538[157] = 0;
   out_4941625080249828538[158] = 0;
   out_4941625080249828538[159] = 0;
   out_4941625080249828538[160] = 0;
   out_4941625080249828538[161] = 0;
   out_4941625080249828538[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4941625080249828538[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4941625080249828538[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4941625080249828538[165] = 0;
   out_4941625080249828538[166] = 0;
   out_4941625080249828538[167] = 0;
   out_4941625080249828538[168] = 0;
   out_4941625080249828538[169] = 0;
   out_4941625080249828538[170] = 0;
   out_4941625080249828538[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4941625080249828538[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4941625080249828538[173] = 0;
   out_4941625080249828538[174] = 0;
   out_4941625080249828538[175] = 0;
   out_4941625080249828538[176] = 1;
   out_4941625080249828538[177] = 0;
   out_4941625080249828538[178] = 0;
   out_4941625080249828538[179] = 0;
   out_4941625080249828538[180] = 0;
   out_4941625080249828538[181] = 0;
   out_4941625080249828538[182] = 0;
   out_4941625080249828538[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4941625080249828538[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4941625080249828538[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4941625080249828538[186] = 0;
   out_4941625080249828538[187] = 0;
   out_4941625080249828538[188] = 0;
   out_4941625080249828538[189] = 0;
   out_4941625080249828538[190] = 0;
   out_4941625080249828538[191] = 0;
   out_4941625080249828538[192] = 0;
   out_4941625080249828538[193] = 0;
   out_4941625080249828538[194] = 0;
   out_4941625080249828538[195] = 0;
   out_4941625080249828538[196] = 0;
   out_4941625080249828538[197] = 0;
   out_4941625080249828538[198] = 1;
   out_4941625080249828538[199] = 0;
   out_4941625080249828538[200] = 0;
   out_4941625080249828538[201] = 0;
   out_4941625080249828538[202] = 0;
   out_4941625080249828538[203] = 0;
   out_4941625080249828538[204] = 0;
   out_4941625080249828538[205] = 0;
   out_4941625080249828538[206] = 0;
   out_4941625080249828538[207] = 0;
   out_4941625080249828538[208] = 0;
   out_4941625080249828538[209] = 0;
   out_4941625080249828538[210] = 0;
   out_4941625080249828538[211] = 0;
   out_4941625080249828538[212] = 0;
   out_4941625080249828538[213] = 0;
   out_4941625080249828538[214] = 0;
   out_4941625080249828538[215] = 0;
   out_4941625080249828538[216] = 0;
   out_4941625080249828538[217] = 0;
   out_4941625080249828538[218] = 0;
   out_4941625080249828538[219] = 0;
   out_4941625080249828538[220] = 1;
   out_4941625080249828538[221] = 0;
   out_4941625080249828538[222] = 0;
   out_4941625080249828538[223] = 0;
   out_4941625080249828538[224] = 0;
   out_4941625080249828538[225] = 0;
   out_4941625080249828538[226] = 0;
   out_4941625080249828538[227] = 0;
   out_4941625080249828538[228] = 0;
   out_4941625080249828538[229] = 0;
   out_4941625080249828538[230] = 0;
   out_4941625080249828538[231] = 0;
   out_4941625080249828538[232] = 0;
   out_4941625080249828538[233] = 0;
   out_4941625080249828538[234] = 0;
   out_4941625080249828538[235] = 0;
   out_4941625080249828538[236] = 0;
   out_4941625080249828538[237] = 0;
   out_4941625080249828538[238] = 0;
   out_4941625080249828538[239] = 0;
   out_4941625080249828538[240] = 0;
   out_4941625080249828538[241] = 0;
   out_4941625080249828538[242] = 1;
   out_4941625080249828538[243] = 0;
   out_4941625080249828538[244] = 0;
   out_4941625080249828538[245] = 0;
   out_4941625080249828538[246] = 0;
   out_4941625080249828538[247] = 0;
   out_4941625080249828538[248] = 0;
   out_4941625080249828538[249] = 0;
   out_4941625080249828538[250] = 0;
   out_4941625080249828538[251] = 0;
   out_4941625080249828538[252] = 0;
   out_4941625080249828538[253] = 0;
   out_4941625080249828538[254] = 0;
   out_4941625080249828538[255] = 0;
   out_4941625080249828538[256] = 0;
   out_4941625080249828538[257] = 0;
   out_4941625080249828538[258] = 0;
   out_4941625080249828538[259] = 0;
   out_4941625080249828538[260] = 0;
   out_4941625080249828538[261] = 0;
   out_4941625080249828538[262] = 0;
   out_4941625080249828538[263] = 0;
   out_4941625080249828538[264] = 1;
   out_4941625080249828538[265] = 0;
   out_4941625080249828538[266] = 0;
   out_4941625080249828538[267] = 0;
   out_4941625080249828538[268] = 0;
   out_4941625080249828538[269] = 0;
   out_4941625080249828538[270] = 0;
   out_4941625080249828538[271] = 0;
   out_4941625080249828538[272] = 0;
   out_4941625080249828538[273] = 0;
   out_4941625080249828538[274] = 0;
   out_4941625080249828538[275] = 0;
   out_4941625080249828538[276] = 0;
   out_4941625080249828538[277] = 0;
   out_4941625080249828538[278] = 0;
   out_4941625080249828538[279] = 0;
   out_4941625080249828538[280] = 0;
   out_4941625080249828538[281] = 0;
   out_4941625080249828538[282] = 0;
   out_4941625080249828538[283] = 0;
   out_4941625080249828538[284] = 0;
   out_4941625080249828538[285] = 0;
   out_4941625080249828538[286] = 1;
   out_4941625080249828538[287] = 0;
   out_4941625080249828538[288] = 0;
   out_4941625080249828538[289] = 0;
   out_4941625080249828538[290] = 0;
   out_4941625080249828538[291] = 0;
   out_4941625080249828538[292] = 0;
   out_4941625080249828538[293] = 0;
   out_4941625080249828538[294] = 0;
   out_4941625080249828538[295] = 0;
   out_4941625080249828538[296] = 0;
   out_4941625080249828538[297] = 0;
   out_4941625080249828538[298] = 0;
   out_4941625080249828538[299] = 0;
   out_4941625080249828538[300] = 0;
   out_4941625080249828538[301] = 0;
   out_4941625080249828538[302] = 0;
   out_4941625080249828538[303] = 0;
   out_4941625080249828538[304] = 0;
   out_4941625080249828538[305] = 0;
   out_4941625080249828538[306] = 0;
   out_4941625080249828538[307] = 0;
   out_4941625080249828538[308] = 1;
   out_4941625080249828538[309] = 0;
   out_4941625080249828538[310] = 0;
   out_4941625080249828538[311] = 0;
   out_4941625080249828538[312] = 0;
   out_4941625080249828538[313] = 0;
   out_4941625080249828538[314] = 0;
   out_4941625080249828538[315] = 0;
   out_4941625080249828538[316] = 0;
   out_4941625080249828538[317] = 0;
   out_4941625080249828538[318] = 0;
   out_4941625080249828538[319] = 0;
   out_4941625080249828538[320] = 0;
   out_4941625080249828538[321] = 0;
   out_4941625080249828538[322] = 0;
   out_4941625080249828538[323] = 0;
   out_4941625080249828538[324] = 0;
   out_4941625080249828538[325] = 0;
   out_4941625080249828538[326] = 0;
   out_4941625080249828538[327] = 0;
   out_4941625080249828538[328] = 0;
   out_4941625080249828538[329] = 0;
   out_4941625080249828538[330] = 1;
   out_4941625080249828538[331] = 0;
   out_4941625080249828538[332] = 0;
   out_4941625080249828538[333] = 0;
   out_4941625080249828538[334] = 0;
   out_4941625080249828538[335] = 0;
   out_4941625080249828538[336] = 0;
   out_4941625080249828538[337] = 0;
   out_4941625080249828538[338] = 0;
   out_4941625080249828538[339] = 0;
   out_4941625080249828538[340] = 0;
   out_4941625080249828538[341] = 0;
   out_4941625080249828538[342] = 0;
   out_4941625080249828538[343] = 0;
   out_4941625080249828538[344] = 0;
   out_4941625080249828538[345] = 0;
   out_4941625080249828538[346] = 0;
   out_4941625080249828538[347] = 0;
   out_4941625080249828538[348] = 0;
   out_4941625080249828538[349] = 0;
   out_4941625080249828538[350] = 0;
   out_4941625080249828538[351] = 0;
   out_4941625080249828538[352] = 1;
   out_4941625080249828538[353] = 0;
   out_4941625080249828538[354] = 0;
   out_4941625080249828538[355] = 0;
   out_4941625080249828538[356] = 0;
   out_4941625080249828538[357] = 0;
   out_4941625080249828538[358] = 0;
   out_4941625080249828538[359] = 0;
   out_4941625080249828538[360] = 0;
   out_4941625080249828538[361] = 0;
   out_4941625080249828538[362] = 0;
   out_4941625080249828538[363] = 0;
   out_4941625080249828538[364] = 0;
   out_4941625080249828538[365] = 0;
   out_4941625080249828538[366] = 0;
   out_4941625080249828538[367] = 0;
   out_4941625080249828538[368] = 0;
   out_4941625080249828538[369] = 0;
   out_4941625080249828538[370] = 0;
   out_4941625080249828538[371] = 0;
   out_4941625080249828538[372] = 0;
   out_4941625080249828538[373] = 0;
   out_4941625080249828538[374] = 1;
   out_4941625080249828538[375] = 0;
   out_4941625080249828538[376] = 0;
   out_4941625080249828538[377] = 0;
   out_4941625080249828538[378] = 0;
   out_4941625080249828538[379] = 0;
   out_4941625080249828538[380] = 0;
   out_4941625080249828538[381] = 0;
   out_4941625080249828538[382] = 0;
   out_4941625080249828538[383] = 0;
   out_4941625080249828538[384] = 0;
   out_4941625080249828538[385] = 0;
   out_4941625080249828538[386] = 0;
   out_4941625080249828538[387] = 0;
   out_4941625080249828538[388] = 0;
   out_4941625080249828538[389] = 0;
   out_4941625080249828538[390] = 0;
   out_4941625080249828538[391] = 0;
   out_4941625080249828538[392] = 0;
   out_4941625080249828538[393] = 0;
   out_4941625080249828538[394] = 0;
   out_4941625080249828538[395] = 0;
   out_4941625080249828538[396] = 1;
   out_4941625080249828538[397] = 0;
   out_4941625080249828538[398] = 0;
   out_4941625080249828538[399] = 0;
   out_4941625080249828538[400] = 0;
   out_4941625080249828538[401] = 0;
   out_4941625080249828538[402] = 0;
   out_4941625080249828538[403] = 0;
   out_4941625080249828538[404] = 0;
   out_4941625080249828538[405] = 0;
   out_4941625080249828538[406] = 0;
   out_4941625080249828538[407] = 0;
   out_4941625080249828538[408] = 0;
   out_4941625080249828538[409] = 0;
   out_4941625080249828538[410] = 0;
   out_4941625080249828538[411] = 0;
   out_4941625080249828538[412] = 0;
   out_4941625080249828538[413] = 0;
   out_4941625080249828538[414] = 0;
   out_4941625080249828538[415] = 0;
   out_4941625080249828538[416] = 0;
   out_4941625080249828538[417] = 0;
   out_4941625080249828538[418] = 1;
   out_4941625080249828538[419] = 0;
   out_4941625080249828538[420] = 0;
   out_4941625080249828538[421] = 0;
   out_4941625080249828538[422] = 0;
   out_4941625080249828538[423] = 0;
   out_4941625080249828538[424] = 0;
   out_4941625080249828538[425] = 0;
   out_4941625080249828538[426] = 0;
   out_4941625080249828538[427] = 0;
   out_4941625080249828538[428] = 0;
   out_4941625080249828538[429] = 0;
   out_4941625080249828538[430] = 0;
   out_4941625080249828538[431] = 0;
   out_4941625080249828538[432] = 0;
   out_4941625080249828538[433] = 0;
   out_4941625080249828538[434] = 0;
   out_4941625080249828538[435] = 0;
   out_4941625080249828538[436] = 0;
   out_4941625080249828538[437] = 0;
   out_4941625080249828538[438] = 0;
   out_4941625080249828538[439] = 0;
   out_4941625080249828538[440] = 1;
}
void h_4(double *state, double *unused, double *out_3729668420870475872) {
   out_3729668420870475872[0] = state[10] + state[13];
   out_3729668420870475872[1] = state[11] + state[14];
   out_3729668420870475872[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4876946195465417178) {
   out_4876946195465417178[0] = 0;
   out_4876946195465417178[1] = 0;
   out_4876946195465417178[2] = 0;
   out_4876946195465417178[3] = 0;
   out_4876946195465417178[4] = 0;
   out_4876946195465417178[5] = 0;
   out_4876946195465417178[6] = 0;
   out_4876946195465417178[7] = 0;
   out_4876946195465417178[8] = 0;
   out_4876946195465417178[9] = 0;
   out_4876946195465417178[10] = 1;
   out_4876946195465417178[11] = 0;
   out_4876946195465417178[12] = 0;
   out_4876946195465417178[13] = 1;
   out_4876946195465417178[14] = 0;
   out_4876946195465417178[15] = 0;
   out_4876946195465417178[16] = 0;
   out_4876946195465417178[17] = 0;
   out_4876946195465417178[18] = 0;
   out_4876946195465417178[19] = 0;
   out_4876946195465417178[20] = 0;
   out_4876946195465417178[21] = 0;
   out_4876946195465417178[22] = 0;
   out_4876946195465417178[23] = 0;
   out_4876946195465417178[24] = 0;
   out_4876946195465417178[25] = 0;
   out_4876946195465417178[26] = 0;
   out_4876946195465417178[27] = 0;
   out_4876946195465417178[28] = 0;
   out_4876946195465417178[29] = 0;
   out_4876946195465417178[30] = 0;
   out_4876946195465417178[31] = 0;
   out_4876946195465417178[32] = 0;
   out_4876946195465417178[33] = 1;
   out_4876946195465417178[34] = 0;
   out_4876946195465417178[35] = 0;
   out_4876946195465417178[36] = 1;
   out_4876946195465417178[37] = 0;
   out_4876946195465417178[38] = 0;
   out_4876946195465417178[39] = 0;
   out_4876946195465417178[40] = 0;
   out_4876946195465417178[41] = 0;
   out_4876946195465417178[42] = 0;
   out_4876946195465417178[43] = 0;
   out_4876946195465417178[44] = 0;
   out_4876946195465417178[45] = 0;
   out_4876946195465417178[46] = 0;
   out_4876946195465417178[47] = 0;
   out_4876946195465417178[48] = 0;
   out_4876946195465417178[49] = 0;
   out_4876946195465417178[50] = 0;
   out_4876946195465417178[51] = 0;
   out_4876946195465417178[52] = 0;
   out_4876946195465417178[53] = 0;
   out_4876946195465417178[54] = 0;
   out_4876946195465417178[55] = 0;
   out_4876946195465417178[56] = 1;
   out_4876946195465417178[57] = 0;
   out_4876946195465417178[58] = 0;
   out_4876946195465417178[59] = 1;
   out_4876946195465417178[60] = 0;
   out_4876946195465417178[61] = 0;
   out_4876946195465417178[62] = 0;
   out_4876946195465417178[63] = 0;
   out_4876946195465417178[64] = 0;
   out_4876946195465417178[65] = 0;
}
void h_9(double *state, double *unused, double *out_1151493546623340019) {
   out_1151493546623340019[0] = state[10];
   out_1151493546623340019[1] = state[11];
   out_1151493546623340019[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2410272739799030292) {
   out_2410272739799030292[0] = 0;
   out_2410272739799030292[1] = 0;
   out_2410272739799030292[2] = 0;
   out_2410272739799030292[3] = 0;
   out_2410272739799030292[4] = 0;
   out_2410272739799030292[5] = 0;
   out_2410272739799030292[6] = 0;
   out_2410272739799030292[7] = 0;
   out_2410272739799030292[8] = 0;
   out_2410272739799030292[9] = 0;
   out_2410272739799030292[10] = 1;
   out_2410272739799030292[11] = 0;
   out_2410272739799030292[12] = 0;
   out_2410272739799030292[13] = 0;
   out_2410272739799030292[14] = 0;
   out_2410272739799030292[15] = 0;
   out_2410272739799030292[16] = 0;
   out_2410272739799030292[17] = 0;
   out_2410272739799030292[18] = 0;
   out_2410272739799030292[19] = 0;
   out_2410272739799030292[20] = 0;
   out_2410272739799030292[21] = 0;
   out_2410272739799030292[22] = 0;
   out_2410272739799030292[23] = 0;
   out_2410272739799030292[24] = 0;
   out_2410272739799030292[25] = 0;
   out_2410272739799030292[26] = 0;
   out_2410272739799030292[27] = 0;
   out_2410272739799030292[28] = 0;
   out_2410272739799030292[29] = 0;
   out_2410272739799030292[30] = 0;
   out_2410272739799030292[31] = 0;
   out_2410272739799030292[32] = 0;
   out_2410272739799030292[33] = 1;
   out_2410272739799030292[34] = 0;
   out_2410272739799030292[35] = 0;
   out_2410272739799030292[36] = 0;
   out_2410272739799030292[37] = 0;
   out_2410272739799030292[38] = 0;
   out_2410272739799030292[39] = 0;
   out_2410272739799030292[40] = 0;
   out_2410272739799030292[41] = 0;
   out_2410272739799030292[42] = 0;
   out_2410272739799030292[43] = 0;
   out_2410272739799030292[44] = 0;
   out_2410272739799030292[45] = 0;
   out_2410272739799030292[46] = 0;
   out_2410272739799030292[47] = 0;
   out_2410272739799030292[48] = 0;
   out_2410272739799030292[49] = 0;
   out_2410272739799030292[50] = 0;
   out_2410272739799030292[51] = 0;
   out_2410272739799030292[52] = 0;
   out_2410272739799030292[53] = 0;
   out_2410272739799030292[54] = 0;
   out_2410272739799030292[55] = 0;
   out_2410272739799030292[56] = 1;
   out_2410272739799030292[57] = 0;
   out_2410272739799030292[58] = 0;
   out_2410272739799030292[59] = 0;
   out_2410272739799030292[60] = 0;
   out_2410272739799030292[61] = 0;
   out_2410272739799030292[62] = 0;
   out_2410272739799030292[63] = 0;
   out_2410272739799030292[64] = 0;
   out_2410272739799030292[65] = 0;
}
void h_10(double *state, double *unused, double *out_6167467416513163071) {
   out_6167467416513163071[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_6167467416513163071[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_6167467416513163071[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6412941887746337931) {
   out_6412941887746337931[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6412941887746337931[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6412941887746337931[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6412941887746337931[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6412941887746337931[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6412941887746337931[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6412941887746337931[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6412941887746337931[7] = 0;
   out_6412941887746337931[8] = 0;
   out_6412941887746337931[9] = 0;
   out_6412941887746337931[10] = 0;
   out_6412941887746337931[11] = 0;
   out_6412941887746337931[12] = 0;
   out_6412941887746337931[13] = 0;
   out_6412941887746337931[14] = 0;
   out_6412941887746337931[15] = 0;
   out_6412941887746337931[16] = 1;
   out_6412941887746337931[17] = 0;
   out_6412941887746337931[18] = 0;
   out_6412941887746337931[19] = 1;
   out_6412941887746337931[20] = 0;
   out_6412941887746337931[21] = 0;
   out_6412941887746337931[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6412941887746337931[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6412941887746337931[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6412941887746337931[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6412941887746337931[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6412941887746337931[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6412941887746337931[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6412941887746337931[29] = 0;
   out_6412941887746337931[30] = 0;
   out_6412941887746337931[31] = 0;
   out_6412941887746337931[32] = 0;
   out_6412941887746337931[33] = 0;
   out_6412941887746337931[34] = 0;
   out_6412941887746337931[35] = 0;
   out_6412941887746337931[36] = 0;
   out_6412941887746337931[37] = 0;
   out_6412941887746337931[38] = 0;
   out_6412941887746337931[39] = 1;
   out_6412941887746337931[40] = 0;
   out_6412941887746337931[41] = 0;
   out_6412941887746337931[42] = 1;
   out_6412941887746337931[43] = 0;
   out_6412941887746337931[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6412941887746337931[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6412941887746337931[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6412941887746337931[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6412941887746337931[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6412941887746337931[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6412941887746337931[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6412941887746337931[51] = 0;
   out_6412941887746337931[52] = 0;
   out_6412941887746337931[53] = 0;
   out_6412941887746337931[54] = 0;
   out_6412941887746337931[55] = 0;
   out_6412941887746337931[56] = 0;
   out_6412941887746337931[57] = 0;
   out_6412941887746337931[58] = 0;
   out_6412941887746337931[59] = 0;
   out_6412941887746337931[60] = 0;
   out_6412941887746337931[61] = 0;
   out_6412941887746337931[62] = 1;
   out_6412941887746337931[63] = 0;
   out_6412941887746337931[64] = 0;
   out_6412941887746337931[65] = 1;
}
void h_12(double *state, double *unused, double *out_1810615206417119516) {
   out_1810615206417119516[0] = state[0];
   out_1810615206417119516[1] = state[1];
   out_1810615206417119516[2] = state[2];
}
void H_12(double *state, double *unused, double *out_142510212566544617) {
   out_142510212566544617[0] = 1;
   out_142510212566544617[1] = 0;
   out_142510212566544617[2] = 0;
   out_142510212566544617[3] = 0;
   out_142510212566544617[4] = 0;
   out_142510212566544617[5] = 0;
   out_142510212566544617[6] = 0;
   out_142510212566544617[7] = 0;
   out_142510212566544617[8] = 0;
   out_142510212566544617[9] = 0;
   out_142510212566544617[10] = 0;
   out_142510212566544617[11] = 0;
   out_142510212566544617[12] = 0;
   out_142510212566544617[13] = 0;
   out_142510212566544617[14] = 0;
   out_142510212566544617[15] = 0;
   out_142510212566544617[16] = 0;
   out_142510212566544617[17] = 0;
   out_142510212566544617[18] = 0;
   out_142510212566544617[19] = 0;
   out_142510212566544617[20] = 0;
   out_142510212566544617[21] = 0;
   out_142510212566544617[22] = 0;
   out_142510212566544617[23] = 1;
   out_142510212566544617[24] = 0;
   out_142510212566544617[25] = 0;
   out_142510212566544617[26] = 0;
   out_142510212566544617[27] = 0;
   out_142510212566544617[28] = 0;
   out_142510212566544617[29] = 0;
   out_142510212566544617[30] = 0;
   out_142510212566544617[31] = 0;
   out_142510212566544617[32] = 0;
   out_142510212566544617[33] = 0;
   out_142510212566544617[34] = 0;
   out_142510212566544617[35] = 0;
   out_142510212566544617[36] = 0;
   out_142510212566544617[37] = 0;
   out_142510212566544617[38] = 0;
   out_142510212566544617[39] = 0;
   out_142510212566544617[40] = 0;
   out_142510212566544617[41] = 0;
   out_142510212566544617[42] = 0;
   out_142510212566544617[43] = 0;
   out_142510212566544617[44] = 0;
   out_142510212566544617[45] = 0;
   out_142510212566544617[46] = 1;
   out_142510212566544617[47] = 0;
   out_142510212566544617[48] = 0;
   out_142510212566544617[49] = 0;
   out_142510212566544617[50] = 0;
   out_142510212566544617[51] = 0;
   out_142510212566544617[52] = 0;
   out_142510212566544617[53] = 0;
   out_142510212566544617[54] = 0;
   out_142510212566544617[55] = 0;
   out_142510212566544617[56] = 0;
   out_142510212566544617[57] = 0;
   out_142510212566544617[58] = 0;
   out_142510212566544617[59] = 0;
   out_142510212566544617[60] = 0;
   out_142510212566544617[61] = 0;
   out_142510212566544617[62] = 0;
   out_142510212566544617[63] = 0;
   out_142510212566544617[64] = 0;
   out_142510212566544617[65] = 0;
}
void h_35(double *state, double *unused, double *out_2945186851113316000) {
   out_2945186851113316000[0] = state[7];
   out_2945186851113316000[1] = state[8];
   out_2945186851113316000[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2888073244891558326) {
   out_2888073244891558326[0] = 0;
   out_2888073244891558326[1] = 0;
   out_2888073244891558326[2] = 0;
   out_2888073244891558326[3] = 0;
   out_2888073244891558326[4] = 0;
   out_2888073244891558326[5] = 0;
   out_2888073244891558326[6] = 0;
   out_2888073244891558326[7] = 1;
   out_2888073244891558326[8] = 0;
   out_2888073244891558326[9] = 0;
   out_2888073244891558326[10] = 0;
   out_2888073244891558326[11] = 0;
   out_2888073244891558326[12] = 0;
   out_2888073244891558326[13] = 0;
   out_2888073244891558326[14] = 0;
   out_2888073244891558326[15] = 0;
   out_2888073244891558326[16] = 0;
   out_2888073244891558326[17] = 0;
   out_2888073244891558326[18] = 0;
   out_2888073244891558326[19] = 0;
   out_2888073244891558326[20] = 0;
   out_2888073244891558326[21] = 0;
   out_2888073244891558326[22] = 0;
   out_2888073244891558326[23] = 0;
   out_2888073244891558326[24] = 0;
   out_2888073244891558326[25] = 0;
   out_2888073244891558326[26] = 0;
   out_2888073244891558326[27] = 0;
   out_2888073244891558326[28] = 0;
   out_2888073244891558326[29] = 0;
   out_2888073244891558326[30] = 1;
   out_2888073244891558326[31] = 0;
   out_2888073244891558326[32] = 0;
   out_2888073244891558326[33] = 0;
   out_2888073244891558326[34] = 0;
   out_2888073244891558326[35] = 0;
   out_2888073244891558326[36] = 0;
   out_2888073244891558326[37] = 0;
   out_2888073244891558326[38] = 0;
   out_2888073244891558326[39] = 0;
   out_2888073244891558326[40] = 0;
   out_2888073244891558326[41] = 0;
   out_2888073244891558326[42] = 0;
   out_2888073244891558326[43] = 0;
   out_2888073244891558326[44] = 0;
   out_2888073244891558326[45] = 0;
   out_2888073244891558326[46] = 0;
   out_2888073244891558326[47] = 0;
   out_2888073244891558326[48] = 0;
   out_2888073244891558326[49] = 0;
   out_2888073244891558326[50] = 0;
   out_2888073244891558326[51] = 0;
   out_2888073244891558326[52] = 0;
   out_2888073244891558326[53] = 1;
   out_2888073244891558326[54] = 0;
   out_2888073244891558326[55] = 0;
   out_2888073244891558326[56] = 0;
   out_2888073244891558326[57] = 0;
   out_2888073244891558326[58] = 0;
   out_2888073244891558326[59] = 0;
   out_2888073244891558326[60] = 0;
   out_2888073244891558326[61] = 0;
   out_2888073244891558326[62] = 0;
   out_2888073244891558326[63] = 0;
   out_2888073244891558326[64] = 0;
   out_2888073244891558326[65] = 0;
}
void h_32(double *state, double *unused, double *out_7977252132068576231) {
   out_7977252132068576231[0] = state[3];
   out_7977252132068576231[1] = state[4];
   out_7977252132068576231[2] = state[5];
   out_7977252132068576231[3] = state[6];
}
void H_32(double *state, double *unused, double *out_137477440014514439) {
   out_137477440014514439[0] = 0;
   out_137477440014514439[1] = 0;
   out_137477440014514439[2] = 0;
   out_137477440014514439[3] = 1;
   out_137477440014514439[4] = 0;
   out_137477440014514439[5] = 0;
   out_137477440014514439[6] = 0;
   out_137477440014514439[7] = 0;
   out_137477440014514439[8] = 0;
   out_137477440014514439[9] = 0;
   out_137477440014514439[10] = 0;
   out_137477440014514439[11] = 0;
   out_137477440014514439[12] = 0;
   out_137477440014514439[13] = 0;
   out_137477440014514439[14] = 0;
   out_137477440014514439[15] = 0;
   out_137477440014514439[16] = 0;
   out_137477440014514439[17] = 0;
   out_137477440014514439[18] = 0;
   out_137477440014514439[19] = 0;
   out_137477440014514439[20] = 0;
   out_137477440014514439[21] = 0;
   out_137477440014514439[22] = 0;
   out_137477440014514439[23] = 0;
   out_137477440014514439[24] = 0;
   out_137477440014514439[25] = 0;
   out_137477440014514439[26] = 1;
   out_137477440014514439[27] = 0;
   out_137477440014514439[28] = 0;
   out_137477440014514439[29] = 0;
   out_137477440014514439[30] = 0;
   out_137477440014514439[31] = 0;
   out_137477440014514439[32] = 0;
   out_137477440014514439[33] = 0;
   out_137477440014514439[34] = 0;
   out_137477440014514439[35] = 0;
   out_137477440014514439[36] = 0;
   out_137477440014514439[37] = 0;
   out_137477440014514439[38] = 0;
   out_137477440014514439[39] = 0;
   out_137477440014514439[40] = 0;
   out_137477440014514439[41] = 0;
   out_137477440014514439[42] = 0;
   out_137477440014514439[43] = 0;
   out_137477440014514439[44] = 0;
   out_137477440014514439[45] = 0;
   out_137477440014514439[46] = 0;
   out_137477440014514439[47] = 0;
   out_137477440014514439[48] = 0;
   out_137477440014514439[49] = 1;
   out_137477440014514439[50] = 0;
   out_137477440014514439[51] = 0;
   out_137477440014514439[52] = 0;
   out_137477440014514439[53] = 0;
   out_137477440014514439[54] = 0;
   out_137477440014514439[55] = 0;
   out_137477440014514439[56] = 0;
   out_137477440014514439[57] = 0;
   out_137477440014514439[58] = 0;
   out_137477440014514439[59] = 0;
   out_137477440014514439[60] = 0;
   out_137477440014514439[61] = 0;
   out_137477440014514439[62] = 0;
   out_137477440014514439[63] = 0;
   out_137477440014514439[64] = 0;
   out_137477440014514439[65] = 0;
   out_137477440014514439[66] = 0;
   out_137477440014514439[67] = 0;
   out_137477440014514439[68] = 0;
   out_137477440014514439[69] = 0;
   out_137477440014514439[70] = 0;
   out_137477440014514439[71] = 0;
   out_137477440014514439[72] = 1;
   out_137477440014514439[73] = 0;
   out_137477440014514439[74] = 0;
   out_137477440014514439[75] = 0;
   out_137477440014514439[76] = 0;
   out_137477440014514439[77] = 0;
   out_137477440014514439[78] = 0;
   out_137477440014514439[79] = 0;
   out_137477440014514439[80] = 0;
   out_137477440014514439[81] = 0;
   out_137477440014514439[82] = 0;
   out_137477440014514439[83] = 0;
   out_137477440014514439[84] = 0;
   out_137477440014514439[85] = 0;
   out_137477440014514439[86] = 0;
   out_137477440014514439[87] = 0;
}
void h_13(double *state, double *unused, double *out_7260199594589518418) {
   out_7260199594589518418[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7260199594589518418[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7260199594589518418[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4332738930436728016) {
   out_4332738930436728016[0] = 0;
   out_4332738930436728016[1] = 0;
   out_4332738930436728016[2] = 0;
   out_4332738930436728016[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4332738930436728016[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4332738930436728016[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4332738930436728016[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4332738930436728016[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4332738930436728016[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4332738930436728016[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4332738930436728016[10] = 0;
   out_4332738930436728016[11] = 0;
   out_4332738930436728016[12] = 0;
   out_4332738930436728016[13] = 0;
   out_4332738930436728016[14] = 0;
   out_4332738930436728016[15] = 0;
   out_4332738930436728016[16] = 0;
   out_4332738930436728016[17] = 0;
   out_4332738930436728016[18] = 0;
   out_4332738930436728016[19] = 0;
   out_4332738930436728016[20] = 0;
   out_4332738930436728016[21] = 0;
   out_4332738930436728016[22] = 0;
   out_4332738930436728016[23] = 0;
   out_4332738930436728016[24] = 0;
   out_4332738930436728016[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4332738930436728016[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4332738930436728016[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4332738930436728016[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4332738930436728016[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4332738930436728016[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4332738930436728016[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4332738930436728016[32] = 0;
   out_4332738930436728016[33] = 0;
   out_4332738930436728016[34] = 0;
   out_4332738930436728016[35] = 0;
   out_4332738930436728016[36] = 0;
   out_4332738930436728016[37] = 0;
   out_4332738930436728016[38] = 0;
   out_4332738930436728016[39] = 0;
   out_4332738930436728016[40] = 0;
   out_4332738930436728016[41] = 0;
   out_4332738930436728016[42] = 0;
   out_4332738930436728016[43] = 0;
   out_4332738930436728016[44] = 0;
   out_4332738930436728016[45] = 0;
   out_4332738930436728016[46] = 0;
   out_4332738930436728016[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4332738930436728016[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4332738930436728016[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4332738930436728016[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4332738930436728016[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4332738930436728016[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4332738930436728016[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4332738930436728016[54] = 0;
   out_4332738930436728016[55] = 0;
   out_4332738930436728016[56] = 0;
   out_4332738930436728016[57] = 0;
   out_4332738930436728016[58] = 0;
   out_4332738930436728016[59] = 0;
   out_4332738930436728016[60] = 0;
   out_4332738930436728016[61] = 0;
   out_4332738930436728016[62] = 0;
   out_4332738930436728016[63] = 0;
   out_4332738930436728016[64] = 0;
   out_4332738930436728016[65] = 0;
}
void h_14(double *state, double *unused, double *out_1151493546623340019) {
   out_1151493546623340019[0] = state[10];
   out_1151493546623340019[1] = state[11];
   out_1151493546623340019[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2410272739799030292) {
   out_2410272739799030292[0] = 0;
   out_2410272739799030292[1] = 0;
   out_2410272739799030292[2] = 0;
   out_2410272739799030292[3] = 0;
   out_2410272739799030292[4] = 0;
   out_2410272739799030292[5] = 0;
   out_2410272739799030292[6] = 0;
   out_2410272739799030292[7] = 0;
   out_2410272739799030292[8] = 0;
   out_2410272739799030292[9] = 0;
   out_2410272739799030292[10] = 1;
   out_2410272739799030292[11] = 0;
   out_2410272739799030292[12] = 0;
   out_2410272739799030292[13] = 0;
   out_2410272739799030292[14] = 0;
   out_2410272739799030292[15] = 0;
   out_2410272739799030292[16] = 0;
   out_2410272739799030292[17] = 0;
   out_2410272739799030292[18] = 0;
   out_2410272739799030292[19] = 0;
   out_2410272739799030292[20] = 0;
   out_2410272739799030292[21] = 0;
   out_2410272739799030292[22] = 0;
   out_2410272739799030292[23] = 0;
   out_2410272739799030292[24] = 0;
   out_2410272739799030292[25] = 0;
   out_2410272739799030292[26] = 0;
   out_2410272739799030292[27] = 0;
   out_2410272739799030292[28] = 0;
   out_2410272739799030292[29] = 0;
   out_2410272739799030292[30] = 0;
   out_2410272739799030292[31] = 0;
   out_2410272739799030292[32] = 0;
   out_2410272739799030292[33] = 1;
   out_2410272739799030292[34] = 0;
   out_2410272739799030292[35] = 0;
   out_2410272739799030292[36] = 0;
   out_2410272739799030292[37] = 0;
   out_2410272739799030292[38] = 0;
   out_2410272739799030292[39] = 0;
   out_2410272739799030292[40] = 0;
   out_2410272739799030292[41] = 0;
   out_2410272739799030292[42] = 0;
   out_2410272739799030292[43] = 0;
   out_2410272739799030292[44] = 0;
   out_2410272739799030292[45] = 0;
   out_2410272739799030292[46] = 0;
   out_2410272739799030292[47] = 0;
   out_2410272739799030292[48] = 0;
   out_2410272739799030292[49] = 0;
   out_2410272739799030292[50] = 0;
   out_2410272739799030292[51] = 0;
   out_2410272739799030292[52] = 0;
   out_2410272739799030292[53] = 0;
   out_2410272739799030292[54] = 0;
   out_2410272739799030292[55] = 0;
   out_2410272739799030292[56] = 1;
   out_2410272739799030292[57] = 0;
   out_2410272739799030292[58] = 0;
   out_2410272739799030292[59] = 0;
   out_2410272739799030292[60] = 0;
   out_2410272739799030292[61] = 0;
   out_2410272739799030292[62] = 0;
   out_2410272739799030292[63] = 0;
   out_2410272739799030292[64] = 0;
   out_2410272739799030292[65] = 0;
}
void h_33(double *state, double *unused, double *out_655295692279212237) {
   out_655295692279212237[0] = state[16];
   out_655295692279212237[1] = state[17];
   out_655295692279212237[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6038630249530415930) {
   out_6038630249530415930[0] = 0;
   out_6038630249530415930[1] = 0;
   out_6038630249530415930[2] = 0;
   out_6038630249530415930[3] = 0;
   out_6038630249530415930[4] = 0;
   out_6038630249530415930[5] = 0;
   out_6038630249530415930[6] = 0;
   out_6038630249530415930[7] = 0;
   out_6038630249530415930[8] = 0;
   out_6038630249530415930[9] = 0;
   out_6038630249530415930[10] = 0;
   out_6038630249530415930[11] = 0;
   out_6038630249530415930[12] = 0;
   out_6038630249530415930[13] = 0;
   out_6038630249530415930[14] = 0;
   out_6038630249530415930[15] = 0;
   out_6038630249530415930[16] = 1;
   out_6038630249530415930[17] = 0;
   out_6038630249530415930[18] = 0;
   out_6038630249530415930[19] = 0;
   out_6038630249530415930[20] = 0;
   out_6038630249530415930[21] = 0;
   out_6038630249530415930[22] = 0;
   out_6038630249530415930[23] = 0;
   out_6038630249530415930[24] = 0;
   out_6038630249530415930[25] = 0;
   out_6038630249530415930[26] = 0;
   out_6038630249530415930[27] = 0;
   out_6038630249530415930[28] = 0;
   out_6038630249530415930[29] = 0;
   out_6038630249530415930[30] = 0;
   out_6038630249530415930[31] = 0;
   out_6038630249530415930[32] = 0;
   out_6038630249530415930[33] = 0;
   out_6038630249530415930[34] = 0;
   out_6038630249530415930[35] = 0;
   out_6038630249530415930[36] = 0;
   out_6038630249530415930[37] = 0;
   out_6038630249530415930[38] = 0;
   out_6038630249530415930[39] = 1;
   out_6038630249530415930[40] = 0;
   out_6038630249530415930[41] = 0;
   out_6038630249530415930[42] = 0;
   out_6038630249530415930[43] = 0;
   out_6038630249530415930[44] = 0;
   out_6038630249530415930[45] = 0;
   out_6038630249530415930[46] = 0;
   out_6038630249530415930[47] = 0;
   out_6038630249530415930[48] = 0;
   out_6038630249530415930[49] = 0;
   out_6038630249530415930[50] = 0;
   out_6038630249530415930[51] = 0;
   out_6038630249530415930[52] = 0;
   out_6038630249530415930[53] = 0;
   out_6038630249530415930[54] = 0;
   out_6038630249530415930[55] = 0;
   out_6038630249530415930[56] = 0;
   out_6038630249530415930[57] = 0;
   out_6038630249530415930[58] = 0;
   out_6038630249530415930[59] = 0;
   out_6038630249530415930[60] = 0;
   out_6038630249530415930[61] = 0;
   out_6038630249530415930[62] = 1;
   out_6038630249530415930[63] = 0;
   out_6038630249530415930[64] = 0;
   out_6038630249530415930[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_688119966555173306) {
  H(in_vec, out_688119966555173306);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5924447345377752939) {
  err_fun(nom_x, delta_x, out_5924447345377752939);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4459438890970929893) {
  inv_err_fun(nom_x, true_x, out_4459438890970929893);
}
void live_H_mod_fun(double *state, double *out_1714341149114002571) {
  H_mod_fun(state, out_1714341149114002571);
}
void live_f_fun(double *state, double dt, double *out_3846009461295015815) {
  f_fun(state,  dt, out_3846009461295015815);
}
void live_F_fun(double *state, double dt, double *out_4941625080249828538) {
  F_fun(state,  dt, out_4941625080249828538);
}
void live_h_4(double *state, double *unused, double *out_3729668420870475872) {
  h_4(state, unused, out_3729668420870475872);
}
void live_H_4(double *state, double *unused, double *out_4876946195465417178) {
  H_4(state, unused, out_4876946195465417178);
}
void live_h_9(double *state, double *unused, double *out_1151493546623340019) {
  h_9(state, unused, out_1151493546623340019);
}
void live_H_9(double *state, double *unused, double *out_2410272739799030292) {
  H_9(state, unused, out_2410272739799030292);
}
void live_h_10(double *state, double *unused, double *out_6167467416513163071) {
  h_10(state, unused, out_6167467416513163071);
}
void live_H_10(double *state, double *unused, double *out_6412941887746337931) {
  H_10(state, unused, out_6412941887746337931);
}
void live_h_12(double *state, double *unused, double *out_1810615206417119516) {
  h_12(state, unused, out_1810615206417119516);
}
void live_H_12(double *state, double *unused, double *out_142510212566544617) {
  H_12(state, unused, out_142510212566544617);
}
void live_h_35(double *state, double *unused, double *out_2945186851113316000) {
  h_35(state, unused, out_2945186851113316000);
}
void live_H_35(double *state, double *unused, double *out_2888073244891558326) {
  H_35(state, unused, out_2888073244891558326);
}
void live_h_32(double *state, double *unused, double *out_7977252132068576231) {
  h_32(state, unused, out_7977252132068576231);
}
void live_H_32(double *state, double *unused, double *out_137477440014514439) {
  H_32(state, unused, out_137477440014514439);
}
void live_h_13(double *state, double *unused, double *out_7260199594589518418) {
  h_13(state, unused, out_7260199594589518418);
}
void live_H_13(double *state, double *unused, double *out_4332738930436728016) {
  H_13(state, unused, out_4332738930436728016);
}
void live_h_14(double *state, double *unused, double *out_1151493546623340019) {
  h_14(state, unused, out_1151493546623340019);
}
void live_H_14(double *state, double *unused, double *out_2410272739799030292) {
  H_14(state, unused, out_2410272739799030292);
}
void live_h_33(double *state, double *unused, double *out_655295692279212237) {
  h_33(state, unused, out_655295692279212237);
}
void live_H_33(double *state, double *unused, double *out_6038630249530415930) {
  H_33(state, unused, out_6038630249530415930);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
