From 1e87ebc411d7e9a696de5cf73238ce73a1797afc Mon Sep 17 00:00:00 2001
From: Jacob Pfeifer <jacob@pfeifer.dev>
Date: Thu, 24 Aug 2023 20:59:47 -0400
Subject: [PATCH] Current Max Speed

Show the current maximum speed in the car hud instead of the set max.
Useful when there are things other than the set max speed limiting your
speed, i.e. speed limit control.
---
 common/params.cc                              |  4 ++
 release/files_common                          |  2 +
 selfdrive/controls/controlsd.py               |  6 +++
 selfdrive/controls/current_max_speed.py       | 39 +++++++++++++++++++
 .../controls/lib/longitudinal_planner.py      |  8 ++++
 5 files changed, 59 insertions(+)
 create mode 100644 selfdrive/controls/current_max_speed.py

diff --git a/common/params.cc b/common/params.cc
index 63baa3031..456ccda80 100644
--- a/common/params.cc
+++ b/common/params.cc
@@ -207,6 +207,10 @@ std::unordered_map<std::string, uint32_t> keys = {
     {"Version", PERSISTENT},
     {"VisionRadarToggle", PERSISTENT},
     {"WheeledBody", PERSISTENT},
+
+    // PFEIFER - CMS {{
+    {"CurrentMaxSpeed", PERSISTENT},
+    // }} PFEIFER - CMS
 };
 
 } // namespace
diff --git a/release/files_common b/release/files_common
index 2d0b5f051..4e796ac58 100644
--- a/release/files_common
+++ b/release/files_common
@@ -600,3 +600,5 @@ tinygrad_repo/tinygrad/nn/*
 tinygrad_repo/tinygrad/runtime/ops_gpu.py
 tinygrad_repo/tinygrad/shape/*
 tinygrad_repo/tinygrad/*.py
+
+selfdrive/controls/current_max_speed.py
diff --git a/selfdrive/controls/controlsd.py b/selfdrive/controls/controlsd.py
index 1dc9dd39f..1ff577370 100755
--- a/selfdrive/controls/controlsd.py
+++ b/selfdrive/controls/controlsd.py
@@ -28,6 +28,9 @@ from openpilot.selfdrive.controls.lib.events import Events, ET
 from openpilot.selfdrive.controls.lib.alertmanager import AlertManager, set_offroad_alert
 from openpilot.selfdrive.controls.lib.vehicle_model import VehicleModel
 from openpilot.system.hardware import HARDWARE
+# PFEIFER - CMS {{
+from openpilot.selfdrive.controls.current_max_speed import cms
+# }} PFEIFER - CMS
 
 SOFT_DISABLE_TIME = 3  # seconds
 LDW_MIN_SPEED = 31 * CV.MPH_TO_MS
@@ -701,6 +704,9 @@ class Controls:
 
     hudControl = CC.hudControl
     hudControl.setSpeed = float(self.v_cruise_helper.v_cruise_cluster_kph * CV.KPH_TO_MS)
+    # PFEIFER - CMS {{
+    hudControl.setSpeed = cms.max_speed
+    # }} PFEIFER - CMS
     hudControl.speedVisible = self.enabled
     hudControl.lanesVisible = self.enabled
     hudControl.leadVisible = self.sm['longitudinalPlan'].hasLead
diff --git a/selfdrive/controls/current_max_speed.py b/selfdrive/controls/current_max_speed.py
new file mode 100644
index 000000000..3f2b7863c
--- /dev/null
+++ b/selfdrive/controls/current_max_speed.py
@@ -0,0 +1,39 @@
+from openpilot.common.conversions import Conversions as CV
+from openpilot.common.params import Params
+import json
+mem_params = Params("/dev/shm/params")
+
+class CurrentMaxSpeed:
+  def __init__(self) -> None:
+    self.max_speed = 0
+
+  @property
+  def max_speed(self) -> float:
+    try:
+      return json.loads(mem_params.get("CurrentMaxSpeed"))
+    except:
+      return 0
+
+  @max_speed.setter
+  def max_speed(self, max_speed: float):
+    try:
+      mem_params.put("CurrentMaxSpeed", json.dumps(float(max_speed)))
+    except: pass
+
+  @property
+  def max_speed_mph(self) -> float:
+    return self.max_speed * CV.MS_TO_MPH
+
+  @max_speed_mph.setter
+  def max_speed_mph(self, max_speed: float):
+    self.max_speed = max_speed * CV.MPH_TO_MS
+
+  @property
+  def max_speed_kph(self) -> float:
+    return self.max_speed * CV.MS_TO_KPH
+
+  @max_speed_kph.setter
+  def max_speed_kph(self, max_speed: float):
+    self.max_speed = max_speed * CV.KPH_TO_MS
+
+cms = CurrentMaxSpeed()
diff --git a/selfdrive/controls/lib/longitudinal_planner.py b/selfdrive/controls/lib/longitudinal_planner.py
index c1e782fa5..519e4b3ff 100755
--- a/selfdrive/controls/lib/longitudinal_planner.py
+++ b/selfdrive/controls/lib/longitudinal_planner.py
@@ -17,6 +17,10 @@ from openpilot.selfdrive.controls.lib.longitudinal_mpc_lib.long_mpc import T_IDX
 from openpilot.selfdrive.controls.lib.drive_helpers import V_CRUISE_MAX, CONTROL_N, get_speed_error
 from openpilot.system.swaglog import cloudlog
 
+# PFEIFER - CMS {{
+from openpilot.selfdrive.controls.current_max_speed import cms
+# }} PFEIFER - CMS
+
 LON_MPC_STEP = 0.2  # first step is 0.2s
 A_CRUISE_MIN = -1.2
 A_CRUISE_MAX_VALS = [1.6, 1.2, 0.8, 0.6]
@@ -135,6 +139,10 @@ class LongitudinalPlanner:
     x, v, a, j = self.parse_model(sm['modelV2'], self.v_model_error)
     self.mpc.update(sm['radarState'], v_cruise, x, v, a, j, personality=self.personality)
 
+    # PFEIFER - CMS {{
+    cms.max_speed = v_cruise
+    # }} PFEIFER - CMS
+
     self.v_desired_trajectory_full = np.interp(T_IDXS, T_IDXS_MPC, self.mpc.v_solution)
     self.a_desired_trajectory_full = np.interp(T_IDXS, T_IDXS_MPC, self.mpc.a_solution)
     self.v_desired_trajectory = self.v_desired_trajectory_full[:CONTROL_N]
-- 
2.39.2

